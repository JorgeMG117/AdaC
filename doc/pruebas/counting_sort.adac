-- Un número apocalíptico es aquel número natural n tal que 2^n contiene la secuencia 666.

procedure counting_sort is

integer A[101], B[101];
integer N, k;
--------------------------------------------------------------------
procedure inicilizarN (ref integer N) is
integer d;
begin
    get (d);
    while d < 0  or d > 100 do
        put ("Escribe un numero (>=0) y (<= 100): ");
        get (d);
        if d < 0 or d > 100 then
            put_line("El numero debe ser >= 0 y <= 100.");
        end
    end
    N := d;
end
--------------------------------------------------------------------

function integer exp (val integer base, exponente) is

integer sol;
------------------------------------------------------------------------
begin
    sol := 1;
    while (exponente > 0) do
        sol := sol * base;
        exponente := exponente - 1;
    end
    return sol;
end

------------------------------------------------------------------------


procedure inicilizarAk (ref integer v[101], val integer N, ref integer k) is
integer i, d, max;
begin
    max := 0;
    i := 0;
    while i < N do
        get (d);
        while d < 0  or d > 100 do
            put ("Escribe un numero (>=0) y (<= 100): ");
            get (d);
            if d < 0 or d > 100 then
                put_line("El numero debe ser >= 0 y <= 100.");
		    end
	    end
        if d > max then
            max := d;
        end
        v[i] := d;
        i := i + 1;
    end
    k := max
end
--------------------------------------------------------------------
procedure sort(ref integer A[101], ref integer B[101], val integer N, val integer k) is
integer C[101];
begin
	n := 2 ^ n; -- Existe el ^????
    -- Comprobar si esta la secuencia 666
    secuencia := 0;
    while secuencia < 3 or n <> 0 do
        if n mod 10 = 6 then
            secuencia := secuencia + 1;
        end
        n := n div 10;
    end

    return secuencia = 3;
end
------------------------------------------------------

begin
    put_line ("Longitud de vector a ordenar: ");
    inicilizarN(N);
    put_line ("Componentes del vector: ");
    inicilizarAk(A, N, k);
    sort(A, B, N, k);
end