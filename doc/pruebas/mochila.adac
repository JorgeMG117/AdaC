--problema de la mochila, vectores ordenados por beneficio/peso, que porcentaje del objeto i metemos en la mochila
procedure mochila is
	integer peso[101];
	integer	benef[101];
	integer cap;

	integer sol[101];
	integer resto;
	integer i;
	integer n;
------------------------------------------------------
procedure inicilizar (ref integer v[101]; val integer N) is
integer i, d;
------------------------------------------------------
begin
    i := 0;
    while i < N do
        get (d);
        while (d < 0)  or (d > 100) do
            put ("Escribe un numero (>=0) y (<= 100): ");
            get (d);
            if (d < 0) or (d > 100) then
                put_line("El numero debe ser >= 0 y <= 100.");
		    end
	    end
        v[i] := d;
        i := i + 1;
    end
end

------------------------------------------------------
procedure escribir_vector (ref integer A[101]; val integer N) is

integer aux;
------------------------------------------------------
begin
	put_line("Mostrando vector solucion: ");
    aux := 0;
    while (aux < N) and (A[aux] <> 0)do
        put_line(A[aux], ",");
        aux := aux + 1;
    end
end
------------------------------------------------------

begin
	put_line("Introduzca el numero de elementos del vector: ");
	get(n);
	put_line("Introduzca la capacidad de la mochila: ");
	get(cap);

	--iniciar vectores peso and benef
	put_line("Inicializando el vector de pesos");
	inicilizar(peso, n);
	put_line("Inicializando el vector de beneficios");
	inicilizar(benef, n);

	while i < n do
		sol[i] := 0;
		i:= i + 1;
	end
	
	resto := cap;
	i := 0;

	while (i<=n) and (peso[i]<=resto) do
		sol[i]:=1; 
		resto:=resto-peso[i]; 
		i:=i+1;
	end

	if i <= n then 
		sol[i]:=resto div peso[i]; --no hay decimales
	end
	
	--devuelve sol
	escribir_vector(sol, n);
end