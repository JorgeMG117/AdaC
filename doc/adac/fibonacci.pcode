  ENP L0
; --Comienzo de fibonacci
L1:
  JMP L2
L2:
; --coger constante entera 10
  STC 10
; --coger constante entera 13
  STC 13
  WRT  0
  WRT  0
  CSF
L3:
  SRF  0  3
  ASGI
  JMP L4
L4:
; --asignando
; --Variable dato
  SRF  0  3
  DRF
; --coger constante entera 0
  STC  0
  ASG
; --asignando
; --Variable correcto
  SRF  0  4
  STC  0
  ASG
L5:
; --coger variable correcto
  SRF  0  4
  DRF
  NGB
  JMF L6
; --coger constante string "Escribe un numero positivo: "
  STC 32
  STC 58
  STC 111
  STC 118
  STC 105
  STC 116
  STC 105
  STC 115
  STC 111
  STC 112
  STC 32
  STC 111
  STC 114
  STC 101
  STC 109
  STC 117
  STC 110
  STC 32
  STC 110
  STC 117
  STC 32
  STC 101
  STC 98
  STC 105
  STC 114
  STC 99
  STC 115
  STC 69
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
; --Variable dato
  SRF  0  3
  DRF
  RD  1
; --asignando
; --Variable correcto
  SRF  0  4
; --coger variable dato
  SRF  0  3
  DRF
  DRF
; --coger constante entera 0
  STC  0
  GT
  ASG
; --coger variable correcto
  SRF  0  4
  DRF
  NGB
  JMF L7
; --put_line
  STC 10
  STC 13
; --coger constante string "El numero debe ser positivo."
  STC 46
  STC 111
  STC 118
  STC 105
  STC 116
  STC 105
  STC 115
  STC 111
  STC 112
  STC 32
  STC 114
  STC 101
  STC 115
  STC 32
  STC 101
  STC 98
  STC 101
  STC 100
  STC 32
  STC 111
  STC 114
  STC 101
  STC 109
  STC 117
  STC 110
  STC 32
  STC 108
  STC 69
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  JMP L8
L7:
L8:
  JMP L5
L6:
  CSF
L9:
  SRF  0  4
  ASGI
  SRF  0  3
  ASGI
  JMP L10
L10:
; --coger variable n
  SRF  0  3
  DRF
; --coger constante entera 1
  STC  1
  GT
  JMF L11
; --coger variable n
  SRF  0  3
  DRF
; --coger constante entera 1
  STC  1
  SBT
  SRF  0  5
  OSF  7  1 L9
; --coger variable n
  SRF  0  3
  DRF
; --coger constante entera 2
  STC  2
  SBT
  SRF  0  6
  OSF  7  1 L9
; --asignando
; --Variable r
  SRF  0  4
  DRF
; --coger variable r1
  SRF  0  5
  DRF
; --coger variable r2
  SRF  0  6
  DRF
  PLUS
  ASG
  JMP L12
L11:
; --asignando
; --Variable r
  SRF  0  4
  DRF
; --coger variable n
  SRF  0  3
  DRF
  ASG
L12:
  CSF
L0:
; --put_line
  STC 10
  STC 13
; --coger constante string "Este programa pide un número positivo n y calcula fib(n) con la fórmula recursiva fib(n) = fib(n-1) + fib(n-2)"
  STC 41
  STC 50
  STC 45
  STC 110
  STC 40
  STC 98
  STC 105
  STC 102
  STC 32
  STC 43
  STC 32
  STC 41
  STC 49
  STC 45
  STC 110
  STC 40
  STC 98
  STC 105
  STC 102
  STC 32
  STC 61
  STC 32
  STC 41
  STC 110
  STC 40
  STC 98
  STC 105
  STC 102
  STC 32
  STC 97
  STC 118
  STC 105
  STC 115
  STC 114
  STC 117
  STC 99
  STC 101
  STC 114
  STC 32
  STC 97
  STC 108
  STC 117
  STC 109
  STC 114
  STC 243
  STC 102
  STC 32
  STC 97
  STC 108
  STC 32
  STC 110
  STC 111
  STC 99
  STC 32
  STC 41
  STC 110
  STC 40
  STC 98
  STC 105
  STC 102
  STC 32
  STC 97
  STC 108
  STC 117
  STC 99
  STC 108
  STC 97
  STC 99
  STC 32
  STC 121
  STC 32
  STC 110
  STC 32
  STC 111
  STC 118
  STC 105
  STC 116
  STC 105
  STC 115
  STC 111
  STC 112
  STC 32
  STC 111
  STC 114
  STC 101
  STC 109
  STC 250
  STC 110
  STC 32
  STC 110
  STC 117
  STC 32
  STC 101
  STC 100
  STC 105
  STC 112
  STC 32
  STC 97
  STC 109
  STC 97
  STC 114
  STC 103
  STC 111
  STC 114
  STC 112
  STC 32
  STC 101
  STC 116
  STC 115
  STC 69
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
; --put_line
  STC 10
  STC 13
; --coger constante string "A partir de 30 será muy lento por la recursividad."
  STC 46
  STC 100
  STC 97
  STC 100
  STC 105
  STC 118
  STC 105
  STC 115
  STC 114
  STC 117
  STC 99
  STC 101
  STC 114
  STC 32
  STC 97
  STC 108
  STC 32
  STC 114
  STC 111
  STC 112
  STC 32
  STC 111
  STC 116
  STC 110
  STC 101
  STC 108
  STC 32
  STC 121
  STC 117
  STC 109
  STC 32
  STC 225
  STC 114
  STC 101
  STC 115
  STC 32
  STC 48
  STC 51
  STC 32
  STC 101
  STC 100
  STC 32
  STC 114
  STC 105
  STC 116
  STC 114
  STC 97
  STC 112
  STC 32
  STC 65
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  0
; --put_line
  STC 10
  STC 13
; --coger constante string ""
  WRT  0
  WRT  0
  SRF  0  4
  OSF  6  0 L3
; --asignando
; --Variable i
  SRF  0  3
; --coger constante entera 1
  STC  1
  ASG
L13:
; --coger variable i
  SRF  0  3
  DRF
; --coger variable n
  SRF  0  4
  DRF
  LTE
  JMF L14
; --coger variable i
  SRF  0  3
  DRF
  SRF  0  5
  OSF  6  0 L9
; --put_line
  STC 10
  STC 13
; --coger variable r
  SRF  0  5
  DRF
; --coger constante string ") = "
  STC 32
  STC 61
  STC 32
  STC 41
; --coger variable i
  SRF  0  3
  DRF
; --coger constante string "fib("
  STC 40
  STC 98
  STC 105
  STC 102
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  1
  WRT  0
  WRT  0
  WRT  0
  WRT  0
  WRT  1
  WRT  0
  WRT  0
; --asignando
; --Variable i
  SRF  0  3
; --coger variable i
  SRF  0  3
  DRF
; --coger constante entera 1
  STC  1
  PLUS
  ASG
  JMP L13
L14:
  OSF  6  0 L1
; --Fin de fibonacci
  LVP
